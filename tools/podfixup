#!/usr/bin/env perl

use strict;
use warnings;
use v5.10;
use File::Spec;
use Config::INI::Reader;

open my $fh, '<', File::Spec->catfile( qw( lib Task BeLike Plicease.pm ));
my @lines = <$fh>;
chomp @lines;
close $fh;

my $config = Config::INI::Reader->read_file('dist.ini');
my @modules = sort{ lc $a cmp lc $b } keys %{ $config->{Prereqs} };

open $fh, '>', File::Spec->catfile( qw( lib Task BeLike Plicease.pm ));

while(defined $lines[0])
{
  $_ = shift @lines;
  say $fh $_;
  last if /^=over 4\s*$/
}

while(defined $lines[0])
{
  $_ = shift @lines;
  last if /^=back\s*$/;
}

foreach my $module (@modules)
{
  say $fh "";
  say $fh "=item *";
  say $fh "";
  say $fh "$module";
}

say $fh "";
say $fh "=back";

while(defined $lines[0])
{
  $_ = shift @lines;
  say $fh $_;
}

close $fh;

my %except;
while(my($section, $modules) = each %$config)
{
  next unless $section =~ /^Author::Plicease::OSPrereqsNot\s*\/\s*(.*?)\s*$/;
  my $os = $1;
  push @{ $except{$_} }, $os for keys %$modules;
}

my $count = scalar(@modules) + 1;
open $fh, '>', File::Spec->catfile( qw( t use.t ));
say $fh "use strict;";
say $fh "use warnings;";
say $fh "BEGIN { eval q{ use EV; } }";
say $fh "use Test::More tests => $count;";
say $fh "use_ok 'Task::BeLike::Plicease';";
foreach my $mod (@modules) {
  if(defined $except{$mod})
  {
    say $fh "SKIP: {";
    say $fh "skip '$_ not supported for $mod', 1 if \$^O eq '$_';" for @{ $except{$mod} };
  }
  say $fh "require_ok '$mod';";
  if(defined $except{$mod})
  {
    say $fh "}";
  }
}
say $fh "done_testing;";
close $fh;

exit 0;
